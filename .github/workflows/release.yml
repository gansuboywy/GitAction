# This is a basic workflow to help you get started with Actions

name: FirstWorkflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, Dev ]
    tags:
      - "v*.*.*"

  pull_request:
    branches: [ master, Dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  release:
    types: [ published ]

env:
  BASE_BRANCH_NAME: 'Dev'
  BASE_BRANCH_SOURCE_FOLD: 'src/main/java/resources/'
  TARGET_BRANCH_NAME: 'master'
  TARGET_BRANCH_DEST_FOLD: 'src/main/java/resources/'
  PREFIX_OF_RELEASE_TAG: 'Rel_'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: show main enviroment variable(after testing, comment out it.)
        run: |
          echo “::debug::workspace=${{ github.workspace }}”
          echo "::debug::repository=${{ github.repository }}"
          echo "::debug::env=${{ github.env }}"
          echo "::debug::ref=${{ github.ref }}"
          echo "::debug::token=${{ secrets.GITHUB_TOKEN }}"

      - name: check out source branch
        uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ env.BASE_BRANCH_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ env.BASE_BRANCH_NAME }}

      - name: fetch files in specifiecd path(source branch)
        id: pl
        uses: Rishabh510/Path-lister-action@master
        with:
          path: ${{ env.BASE_BRANCH_NAME }}/${{ env.BASE_BRANCH_SOURCE_FOLD }}

      - name: check out target branch
        uses: actions/checkout@v3
        with:
          ref: refs/heads/${{ env.TARGET_BRANCH_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ env.TARGET_BRANCH_NAME }}

      - name: copy file from checked out path of source branch to corresponding path
        run: |
          cd ${{ github.workspace }}
          for i in ${{ steps.pl.outputs.paths }}; do
            cp $i ${{ env.TARGET_BRANCH_NAME }}/${{ env.TARGET_BRANCH_DEST_FOLD }}
          done 

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'

          # server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          # settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: build with maven
        run: |
          cd ${{ env.TARGET_BRANCH_NAME }}
          mvn clean package -DskipTests=true

      -name: create new name of tag for release
        run: |
          echo ::set-output name=CURRENT_TAG::${GITHUB_REF#refs/tags/}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: false
          prerelease: false
          name: ${{ env.PREFIX_OF_RELEASE_TAG }}$CURRENT_TAG
          tag_name: ${{ env.PREFIX_OF_RELEASE_TAG }}$CURRENT_TAG
          # name: ${{ github.ref }}
          # tag_name: ${{ github.ref }}
          files: |
            ${{ github.workspace }}/${{ env.TARGET_BRANCH_NAME }}/target/GitAction-1.jar

      # - name: Bump version and push tag
      #   id: tag_version
      #   uses: mathieudutour/github-tag-action@v5
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     default_bump: "minor"

      # - name: release
      #   uses: actions/create-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     # tag_name: ${{ steps.tag_version.outputs.new_tag }}
      #     # release_name: Release ${{ steps.tag_version.outputs.new_tag }}
      #     tag_name: Jar_${{ github.ref }}
      #     release_name: Jar_${{ github.ref }}
      #     draft: false
      #     prerelease: false
      #               files: |
      #       ${{ env.TARGET_BRANCH_NAME }}/target/aeonpeopleportal-api.jar